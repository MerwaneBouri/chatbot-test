import streamlit as st
import random
import time

# Configuration de la page
st.set_page_config(
    page_title="mIAm - Assistant de Recettes",
    page_icon="üç≤",
    layout="wide"
)

# Personnalisation du th√®me
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        color: #FF6B6B;
    }
    .sub-header {
        font-size: 1.5rem;
        color: #4ECDC4;
    }
</style>
""", unsafe_allow_html=True)

# Initialisation de l'historique du chat dans session_state
if "messages" not in st.session_state:
    st.session_state.messages = []

# Initialiser d'autres variables d'√©tat
if "first_interaction" not in st.session_state:
    st.session_state.first_interaction = True

def main():
    # En-t√™te de l'application avec logo et titre
    col1, col2 = st.columns([1, 5])
    with col1:
        st.image("images/imagemIAm.webp", width=100)  # Placeholder pour logo
    with col2:
        st.markdown("<h1 class='main-header'>mIAm</h1>", unsafe_allow_html=True)
        st.markdown("<h3 class='sub-header'>Votre assistant de recettes aliment√© par l'IA</h3>", unsafe_allow_html=True)

    # Sidebar pour les options
    with st.sidebar:
        st.header("Options")
        
        # Filtres pour les recettes
        st.subheader("Pr√©f√©rences alimentaires")
        diet_preference = st.selectbox(
            "R√©gime alimentaire", 
            ["Tous", "V√©g√©tarien", "Vegan", "Sans gluten", "Faible en glucides"]
        )
        
        # Bouton pour effacer l'historique
        if st.button("Effacer l'historique de chat"):
            st.session_state.messages = []
            st.session_state.first_interaction = True
            st.experimental_rerun()
    
    # Section principale de chat
    st.subheader("Chat avec mIAm")

    # Message de bienvenue pour les premi√®res interactions
    if st.session_state.first_interaction:
        with st.chat_message("assistant"):
            st.markdown("üëã Bonjour ! Je suis mIAm, votre assistant de cuisine. Que souhaitez-vous cuisiner aujourd'hui ?")
        st.session_state.first_interaction = False
        st.session_state.messages.append({"role": "assistant", "content": "üëã Bonjour ! Je suis mIAm, votre assistant de cuisine. Que souhaitez-vous cuisiner aujourd'hui ?"})

    # Afficher les messages de l'historique
    display_chat_history()
    
    # Zone de saisie pour le chat
    process_user_input()
    
def display_chat_history():
    """Affiche l'historique des messages du chat."""
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

def process_user_input():
    """Traite l'entr√©e de l'utilisateur et g√©n√®re une r√©ponse."""
    if prompt := st.chat_input("Quelle recette souhaitez-vous aujourd'hui?"):
        # Ajouter le message de l'utilisateur √† l'historique
        st.session_state.messages.append({"role": "user", "content": prompt})
        
        # Afficher le message de l'utilisateur
        with st.chat_message("user"):
            st.markdown(prompt)
        
        # G√©n√©rer la r√©ponse avec effet de chargement
        with st.chat_message("assistant"):
            message_placeholder = st.empty()
            full_response = ""
            
            # Simuler la g√©n√©ration de r√©ponse
            response = generate_bot_response(prompt)
            words = response.split()
            
            # Afficher la r√©ponse mot par mot pour l'effet de frappe
            for word in words:
                full_response += word + " "
                message_placeholder.markdown(full_response + "‚ñå")
                time.sleep(0.05)  # Ajustez pour contr√¥ler la vitesse
                
            # Afficher la r√©ponse finale
            message_placeholder.markdown(full_response)
        
        # Ajouter la r√©ponse √† l'historique
        st.session_state.messages.append({"role": "assistant", "content": response})

def generate_bot_response(prompt):
    """
    G√©n√®re une r√©ponse du chatbot (version simul√©e).
    √Ä remplacer par l'int√©gration r√©elle du backend plus tard.
    """
    # Simulation de r√©ponses plus d√©taill√©es
    prompt_lower = prompt.lower()
    
    # R√©ponses pour les pizzas
    if "pizza" in prompt_lower:
        pizza_responses = [
            "**Pizza Margherita** - Un classique italien! Voici ce dont vous aurez besoin:\n\n"
            "**Ingr√©dients:**\n"
            "- 1 p√¢te √† pizza\n"
            "- 150g de sauce tomate\n"
            "- 200g de mozzarella fra√Æche\n"
            "- Quelques feuilles de basilic frais\n"
            "- 2 cuill√®res √† soupe d'huile d'olive\n"
            "- Sel et poivre\n\n"
            "Souhaitez-vous voir les instructions de pr√©paration?",
            
            "**Pizza Pepperoni** - Un favori de tous les temps! Voici les ingr√©dients:\n\n"
            "**Ingr√©dients:**\n"
            "- 1 p√¢te √† pizza\n"
            "- 150g de sauce tomate\n"
            "- 180g de mozzarella r√¢p√©e\n"
            "- 100g de tranches de pepperoni\n"
            "- 1 poivron vert √©minc√© (optionnel)\n"
            "- Origan s√©ch√©\n\n"
            "Voulez-vous conna√Ætre les √©tapes de pr√©paration?"
        ]
        return random.choice(pizza_responses)
    
    # R√©ponses pour les p√¢tes
    elif "pasta" in prompt_lower or "p√¢tes" in prompt_lower:
        pasta_responses = [
            "**Spaghetti Carbonara** - Un plat romain traditionnel! Voici les ingr√©dients:\n\n"
            "**Ingr√©dients (pour 2 personnes):**\n"
            "- 200g de spaghetti\n"
            "- 100g de pancetta ou de lardons\n"
            "- 2 gros ≈ìufs\n"
            "- 30g de pecorino romano r√¢p√©\n"
            "- 30g de parmesan r√¢p√©\n"
            "- Poivre noir fra√Æchement moulu\n\n"
            "Voulez-vous conna√Ætre la m√©thode de pr√©paration?",
            
            "**Pennes √† l'Arrabiata** - Une sauce √©pic√©e et savoureuse! Voici ce qu'il vous faut:\n\n"
            "**Ingr√©dients (pour 4 personnes):**\n"
            "- 400g de pennes\n"
            "- 2 bo√Ætes de tomates concass√©es\n"
            "- 4 gousses d'ail √©minc√©es\n"
            "- 2 piments rouges (ajustez selon votre tol√©rance)\n"
            "- Huile d'olive extra vierge\n"
            "- Sel et poivre\n"
            "- Persil frais hach√©\n\n"
            "Souhaitez-vous voir les instructions de pr√©paration?"
        ]
        return random.choice(pasta_responses)
    
    # R√©ponses pour les plats v√©g√©tariens/vegans
    elif "v√©g√©tarien" in prompt_lower or "vegan" in prompt_lower:
        veg_responses = [
            "**Salade de Quinoa aux L√©gumes Grill√©s** - Nutritive et d√©licieuse! Voici les ingr√©dients:\n\n"
            "**Ingr√©dients (pour 4 personnes):**\n"
            "- 200g de quinoa\n"
            "- 1 courgette\n"
            "- 1 aubergine\n"
            "- 1 poivron rouge\n"
            "- 1 oignon rouge\n"
            "- 150g de tomates cerises\n"
            "- Jus d'un citron\n"
            "- Huile d'olive\n"
            "- Sel et poivre\n\n"
            "Voulez-vous la recette compl√®te?",
            
            "**Curry de Pois Chiches** - Un plat r√©confortant! Voici ce dont vous aurez besoin:\n\n"
            "**Ingr√©dients:**\n"
            "- 2 bo√Ætes de pois chiches\n"
            "- 1 oignon\n"
            "- 3 gousses d'ail\n"
            "- 1 bo√Æte de tomates concass√©es\n"
            "- 1 bo√Æte de lait de coco\n"
            "- 2 c. √† caf√© de curry en poudre\n"
            "- 1 c. √† caf√© de cumin\n"
            "- Sel et poivre\n\n"
            "Souhaitez-vous conna√Ætre les √©tapes de pr√©paration?"
        ]
        return random.choice(veg_responses)
    
    # R√©ponse par d√©faut avec suggestions
    else:
        default_responses = [
            "Je serais ravi de vous sugg√©rer des recettes! Quel type de cuisine vous int√©resse?\n\n"
            "Voici quelques options:\n"
            "- **Cuisine italienne**: pizza, pasta, risotto\n"
            "- **Cuisine fran√ßaise**: quiche, ratatouille, coq au vin\n"
            "- **Cuisine asiatique**: curry, stir-fry, sushi\n"
            "- **Cuisine mexicaine**: tacos, enchiladas, guacamole\n\n"
            "Ou dites-moi simplement quels ingr√©dients vous avez sous la main!",
            
            "Je peux vous aider √† trouver la recette parfaite! Avez-vous une pr√©f√©rence pour:\n\n"
            "- Un petit-d√©jeuner √©nerg√©tique?\n"
            "- Un d√©jeuner l√©ger?\n"
            "- Un d√Æner complet?\n"
            "- Des desserts ou p√¢tisseries?\n\n"
            "Je peux aussi vous proposer des id√©es bas√©es sur des ingr√©dients sp√©cifiques."
        ]
        return random.choice(default_responses)

if __name__ == "__main__":
    main()
